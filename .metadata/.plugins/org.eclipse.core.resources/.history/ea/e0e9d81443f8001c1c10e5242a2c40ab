package employeesOOP;

import java.util.ArrayList;
import java.util.List;

public class EmpDAO extends DBConn {

	public EmpDAO() {
	
	}
	
	public static EmpDAO getInstance() {
		return new EmpDAO();
	}
	
	// 회원목록
	public List<EmpVO> empSelect(String searchWord) {
		List<EmpVO> list = new ArrayList<EmpVO>();
		try {
			getConn();
			
			sql = "select mem_id, username, depart, phone, email from member ";
			if(searchWord !=null) {
				sql += " where username like ? ";
			}	
			sql += " order by mem_id";
			
			// 검색어가 있냐 없냐에 따라 둘중 하나의 결과
			// select mem_id, username, depart, phone, email from member order by mem_id
			// select mem_id, username, depart, phone, email from member where username like ? order by mem_id
			
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			while(rs.next()) {
				// 회원을 VO에 담기
				EmpVO vo = new EmpVO();
				vo.setMem_id(rs.getInt(1));
				vo.setUsername(rs.getString(2));
				vo.setDepart(rs.getString(3));
				vo.setPhone(rs.getString(4));
				vo.setEmail(rs.getString(5));
				
				// VO를 ArrayList에 담기
				list.add(vo);	
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			getClose();
		}
		return list;
	}
	
	// 회원등록
	public int empInsert(EmpVO vo) {
		int result = 0;
		try {
			getConn(); // DB연결
			sql = "insert into member(mem_id, username, depart, phone, email) "
					+ "values(?,?,?,?,?)";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, vo.getMem_id());
			pstmt.setString(2, vo.getUsername());
			pstmt.setString(3, vo.getDepart());
			pstmt.setString(4, vo.getPhone());
			pstmt.setString(5, vo.getEmail());
			
			result = pstmt.executeUpdate();
			
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return result;
	}
	// 회원선택
	// 회원수정
	public int empUpdate(EmpVO vo) {
		int result=0;
		try {
			getConn();
			sql = "update member set "+vo.getFieldName()+ "=? where mem_id=?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, vo.getPhone());
			pstmt.setInt(2, vo.getMem_id());
			
			result=pstmt.executeUpdate();
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			getClose();
		}
		return result;
	}
	// 회원삭제
	public int empDelete(int mem_id) {
		int result=0;
		try {
			getConn();
			sql = "delete from member where mem_id=?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, mem_id);
			
			result=pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
}
